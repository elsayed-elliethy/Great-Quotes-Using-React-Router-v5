{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/ui/LoadingSpinner.module.css","components/ui/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNav.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","components/ui/LoadingSpinner.js","pages/AllQuotes.js","components/ui/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","MainNav","className","styles","header","logo","nav","activeClassName","active","to","QuoteItem","props","classes","item","text","author","id","QuoteList","history","useHistory","location","useLocation","match","useRouteMatch","isSortAsc","URLSearchParams","search","get","sorting","onClick","quotes","ascending","push","pathname","url","sort","quoteA","quoteB","list","map","quote","NoQuotesFound","noquotes","useHttp","useState","isLoading","setIsLoading","error","setError","requestFn","useCallback","configReq","applyData","fetch","method","headers","body","JSON","stringify","response","ok","Error","json","data","LoadingSpinner","spinner","AllQuotes","getQuotes","allQuots","setAllQuots","useEffect","loadedArray","Object","entries","key","value","length","Card","card","children","QuoteForm","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","enteredText","onAddQuote","loading","control","htmlFor","type","ref","rows","actions","NewQuote","sendQuote","isSubmited","setIsSubmited","newQuote","NewCommentForm","commentTextRef","submitFormHandler","onAddComment","CommentItem","CommentsList","params","useParams","targetComments","comments","filter","comment","quoteId","content","ele","Comments","isAddingComment","setIsAddingComment","sendComment","supmitComment","setSubmitComment","replace","isload","err","getComments","allComments","setAllComments","commentText","HighlightedQuote","QuoteDetails","targetQuote","path","exact","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b981856b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3NXFJ\",\"logo\":\"MainNavigation_logo__nA0pr\",\"nav\":\"MainNavigation_nav__2POcH\",\"active\":\"MainNavigation_active__3GSwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1CI9i\",\"loading\":\"QuoteForm_loading__2C1VY\",\"control\":\"QuoteForm_control__vBYXV\",\"actions\":\"QuoteForm_actions__2NyMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2CeSs\",\"loading\":\"NewCommentForm_loading__2DVHN\",\"control\":\"NewCommentForm_control__3o9hd\",\"actions\":\"NewCommentForm_actions__oQJfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3ssxU\",\"sorting\":\"QuoteList_sorting__1v-W6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__Xk9Cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1OgMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__35wBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3KhA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1wwXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2qbmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1dgmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1S_Ns\"};","// import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./MainNavigation.module.css\";\r\nconst MainNav = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <h1 className={styles.logo}>Great Quotes</h1>\r\n      <nav className={styles.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink activeClassName={styles.active} to=\"/all-quotes\">\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName={styles.active} to=\"/new-quote\">\r\n              New Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default MainNav;\r\n","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/all-quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  // console.log(history);\n  // console.log(location);\n  // console.log(match, \"ggg\");\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAsc = queryParams.get(\"sort\") === \"asc\";\n  const changeSortHandler = () => {\n    history.push({\n      pathname: match.url,\n      search: `?sort=${isSortAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${match.url}?sort=${isSortAsc ? \"desc\" : \"asc\"}`);\n    sortQuotes(props.quotes, isSortAsc);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { Component, useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const requestFn = useCallback(async (configReq, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(configReq.url, {\n        method: configReq.method ? configReq.method : \"GET\",\n        headers: configReq.headers ? configReq.headers : {},\n        body: configReq.body ? JSON.stringify(configReq.body) : null,\n      });\n      if (!response.ok) {\n        throw new Error(\"Request Field\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      // setError(err.message || \"Something Went Wrong\");\n      setError(\"Something Went Wrong\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    requestFn: requestFn,\n  };\n};\n\nexport default useHttp;\n\n/*\n\nimport { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n*/\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nconst AllQuotes = (props) => {\r\n  /////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  //////////\r\n  // console.log(allQuots);\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!error && !isLoading && allQuots.length === 0) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={allQuots}></QuoteList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  };\n  const finichEnteredHandler = () => {\n    setIsEntered(false);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) => {\n          return \"Are You Sure\";\n        }}\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finichEnteredHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst NewQuote = (props) => {\r\n  const history = useHistory();\r\n\r\n  //////////\r\n  const { isLoading, error, requestFn: sendQuote } = useHttp();\r\n  const [isSubmited, setIsSubmited] = useState(false);\r\n  const addQuoteHandler = (newQuote) => {\r\n    const transformData = (data) => {\r\n      setIsSubmited(true);\r\n    };\r\n    sendQuote(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n        method: \"POST\",\r\n        body: newQuote,\r\n      },\r\n      transformData\r\n    );\r\n  };\r\n\r\n  if (isSubmited && !error && !isLoading) {\r\n    history.push(\"/all-quotes\");\r\n  }\r\n\r\n  ///////////////\r\n  return (\r\n    <div>\r\n      <QuoteForm isLoading={isLoading} onAddQuote={addQuoteHandler}></QuoteForm>\r\n    </div>\r\n  );\r\n};\r\nexport default NewQuote;\r\n","import { useEffect, useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // send comment to server\n    props.onAddComment(commentTextRef.current.value);\n  };\n  if (props.isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import { useParams } from \"react-router-dom\";\nimport CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\nconst CommentsList = (props) => {\n  const params = useParams();\n\n  const targetComments = props.comments.filter((comment) => {\n    return comment.quote === params.quoteId;\n  });\n\n  let content = targetComments.map((ele) => {\n    return <CommentItem key={ele.id} text={ele.text} />;\n  });\n  if (targetComments.length === 0) {\n    content = (\n      <p className=\"centered\">no comments were added yet for this quote</p>\n    );\n  }\n\n  return <ul className={classes.comments}>{content}</ul>;\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const { isLoading, error, requestFn: sendComment } = useHttp();\n  ////////////\n  const [supmitComment, setSubmitComment] = useState(false);\n  const addCommentHandler = (commentText) => {\n    const transformData = (data) => {\n      setSubmitComment(true);\n    };\n    sendComment(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n        method: \"POST\",\n        body: { quote: params.quoteId, text: commentText },\n      },\n      transformData\n    );\n  };\n\n  useEffect(() => {\n    if (!isLoading && !error && supmitComment) {\n      history.replace(`/all-quotes/${match.params.quoteId}`);\n    }\n  }, [error, isLoading, supmitComment, history, match.params.quoteId]);\n\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          quote: value.quote,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n\n  let comments;\n  if (isload) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (!isload && !err && allComments.length > 0) {\n    comments = <CommentsList comments={allComments} />;\n  }\n  if (!isload && !err && allComments.length === 0) {\n    comments = <p className=\"centered\">no comments were added yet</p>;\n  }\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          isLoading={isLoading}\n          onAddComment={addCommentHandler}\n          error={error}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  useParams,\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  //////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  /////////\r\n  // const quote = allQuots.find((quote) => quote.id === params.quoteId);\r\n  const [quote] = allQuots.filter((quote) => quote.id === params.quoteId);\r\n  const targetQuote = { ...quote };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!error && !isLoading && targetQuote.text === \"\") {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={targetQuote.text} author={targetQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* {location.pathname === `/all-quotes/${params.quoteId}` && (\r\n        <div className=\"centered\">\r\n          <Link\r\n            className=\"btn--flat\"\r\n            to={`/all-quotes/${params.quoteId}/comments`}\r\n          >\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      )} */}\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <p>Page Not Found</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MainNav from \"./components/layout/MainNav\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport NotFound from \"./pages/NotFound\";\nfunction App() {\n  return (\n    <div>\n      <MainNav></MainNav>\n      <main className=\"main\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/all-quotes\" />\n          </Route>\n          <Route path=\"/all-quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"/all-quotes/:quoteId\">\n            <QuoteDetails />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n// import { BrowserRouter } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n"],"sourceRoot":""}