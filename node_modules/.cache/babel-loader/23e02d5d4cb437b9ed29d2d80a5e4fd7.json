{"ast":null,"code":"var _jsxFileName = \"D:\\\\React2\\\\React Router\\\\Practice\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  }; //////////\n\n\n  const params = useParams();\n  const {\n    isLoading,\n    error,\n    requestFn: sendQuote\n  } = useHttp();\n\n  const addCommentHandler = commentText => {\n    sendQuote({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      method: \"POST\",\n      body: {\n        id: params.quoteId,\n        text: commentText\n      }\n    });\n  }; ///////////////\n  /////////\n\n\n  const {\n    isLoading: isload,\n    error: err,\n    requestFn: getComments\n  } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = data => {\n      const loadedArray = [];\n      Object.entries(data).map(_ref => {\n        let [key, value] = _ref;\n        return loadedArray.push({\n          id: value.id,\n          text: value.text\n        });\n      });\n      setAllComments(loadedArray);\n    };\n\n    getComments({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\"\n    }, transformData);\n  }, [getComments]); //////////\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: allComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"2dAwQjjl1o92kp+U6fUBNLnQeKI=\", false, function () {\n  return [useParams, useHttp, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","CommentsList","useHttp","useParams","Comments","isAddingComment","setIsAddingComment","startAddCommentHandler","params","isLoading","error","requestFn","sendQuote","addCommentHandler","commentText","url","method","body","id","quoteId","text","isload","err","getComments","allComments","setAllComments","transformData","data","loadedArray","Object","entries","map","key","value","push","comments"],"sources":["D:/React2/React Router/Practice/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const { isLoading, error, requestFn: sendQuote } = useHttp();\n  const addCommentHandler = (commentText) => {\n    sendQuote({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      method: \"POST\",\n      body: { id: params.quoteId, text: commentText },\n    });\n  };\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: value.id,\n          text: value.text,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddComment={addCommentHandler} />}\n      <p>Comments...</p>\n      <CommentsList comments={allComments} />\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;;EAEA,MAAMS,sBAAsB,GAAG,MAAM;IACnCD,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD,CAHqB,CAMrB;;;EACA,MAAME,MAAM,GAAGL,SAAS,EAAxB;EACA,MAAM;IAAEM,SAAF;IAAaC,KAAb;IAAoBC,SAAS,EAAEC;EAA/B,IAA6CV,OAAO,EAA1D;;EACA,MAAMW,iBAAiB,GAAIC,WAAD,IAAiB;IACzCF,SAAS,CAAC;MACRG,GAAG,EAAE,sEADG;MAERC,MAAM,EAAE,MAFA;MAGRC,IAAI,EAAE;QAAEC,EAAE,EAAEV,MAAM,CAACW,OAAb;QAAsBC,IAAI,EAAEN;MAA5B;IAHE,CAAD,CAAT;EAKD,CAND,CATqB,CAgBrB;EACA;;;EACA,MAAM;IAAEL,SAAS,EAAEY,MAAb;IAAqBX,KAAK,EAAEY,GAA5B;IAAiCX,SAAS,EAAEY;EAA5C,IAA4DrB,OAAO,EAAzE;EACA,MAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAM6B,aAAa,GAAIC,IAAD,IAAU;MAC9B,MAAMC,WAAW,GAAG,EAApB;MACAC,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,GAArB,CAAyB,QAAkB;QAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;QACzC,OAAOL,WAAW,CAACM,IAAZ,CAAiB;UACtBhB,EAAE,EAAEe,KAAK,CAACf,EADY;UAEtBE,IAAI,EAAEa,KAAK,CAACb;QAFU,CAAjB,CAAP;MAID,CALD;MAMAK,cAAc,CAACG,WAAD,CAAd;IACD,CATD;;IAUAL,WAAW,CACT;MACER,GAAG,EAAE;IADP,CADS,EAITW,aAJS,CAAX;EAMD,CAjBQ,EAiBN,CAACH,WAAD,CAjBM,CAAT,CApBqB,CAsCrB;;EACA,oBACE;IAAS,SAAS,EAAExB,OAAO,CAACoC,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAAC9B,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEE,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGF,eAAe,iBAAI,QAAC,cAAD;MAAgB,YAAY,EAAEQ;IAA9B;MAAA;MAAA;MAAA;IAAA,QAPtB,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eASE,QAAC,YAAD;MAAc,QAAQ,EAAEW;IAAxB;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CApDD;;GAAMpB,Q;UAOWD,S,EACoCD,O,EAUeA,O;;;KAlB9DE,Q;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}