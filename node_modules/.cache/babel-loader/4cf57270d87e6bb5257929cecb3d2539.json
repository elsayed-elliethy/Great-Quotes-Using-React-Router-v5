{"ast":null,"code":"var _jsxFileName = \"D:\\\\React2\\\\React Router\\\\Practice\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useHistory, useLocation, useParams, useRouteMatch } from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  }; //////////\n\n\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const {\n    isLoading,\n    error,\n    requestFn: sendComment\n  } = useHttp(); ////////////\n\n  const [supmitComment, setSubmitComment] = useState(false);\n\n  const addCommentHandler = commentText => {\n    const transformData = data => {\n      setSubmitComment(true);\n    };\n\n    sendComment({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      method: \"POST\",\n      body: {\n        quote: params.quoteId,\n        text: commentText\n      }\n    }, transformData); // history.replace(location.pathname);\n  };\n\n  console.log(match);\n  useEffect(() => {\n    if (!isLoading && !error && supmitComment) {\n      history.replace(`/all-quotes/${match.params.quoteId}`);\n    }\n  }, [error, isLoading, supmitComment, history, match.params.quoteId]); ///////////////\n  /////////\n\n  const {\n    isLoading: isload,\n    error: err,\n    requestFn: getComments\n  } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = data => {\n      const loadedArray = [];\n      Object.entries(data).map(_ref => {\n        let [key, value] = _ref;\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          quote: value.quote\n        });\n      });\n      setAllComments(loadedArray);\n    };\n\n    getComments({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\"\n    }, transformData);\n  }, [getComments]);\n  let comments;\n\n  if (isload) {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isload && !err && allComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: allComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isload && !err && allComments.length === 0) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"no comments were added yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  } //////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      isLoading: isLoading,\n      onAddComment: addCommentHandler,\n      error: error // addCommentFn={addCommentFnHandler}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"swT5cGjnQw5uk7zk9P/ulPThoBs=\", false, function () {\n  return [useParams, useHistory, useRouteMatch, useLocation, useHttp, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useCallback","useEffect","useState","classes","NewCommentForm","CommentsList","useHttp","useHistory","useLocation","useParams","useRouteMatch","LoadingSpinner","Comments","isAddingComment","setIsAddingComment","startAddCommentHandler","params","history","match","location","isLoading","error","requestFn","sendComment","supmitComment","setSubmitComment","addCommentHandler","commentText","transformData","data","url","method","body","quote","quoteId","text","console","log","replace","isload","err","getComments","allComments","setAllComments","loadedArray","Object","entries","map","key","value","push","id","comments","length"],"sources":["D:/React2/React Router/Practice/src/components/comments/Comments.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const { isLoading, error, requestFn: sendComment } = useHttp();\n  ////////////\n  const [supmitComment, setSubmitComment] = useState(false);\n  const addCommentHandler = (commentText) => {\n    const transformData = (data) => {\n      setSubmitComment(true);\n    };\n    sendComment(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n        method: \"POST\",\n        body: { quote: params.quoteId, text: commentText },\n      },\n      transformData\n    );\n    // history.replace(location.pathname);\n  };\n  console.log(match);\n  useEffect(() => {\n    if (!isLoading && !error && supmitComment) {\n      history.replace(`/all-quotes/${match.params.quoteId}`);\n    }\n  }, [error, isLoading, supmitComment, history, match.params.quoteId]);\n\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          quote: value.quote,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n\n  let comments;\n  if (isload) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (!isload && !err && allComments.length > 0) {\n    comments = <CommentsList comments={allComments} />;\n  }\n  if (!isload && !err && allComments.length === 0) {\n    comments = <p className=\"centered\">no comments were added yet</p>;\n  }\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          isLoading={isLoading}\n          onAddComment={addCommentHandler}\n          error={error}\n          // addCommentFn={addCommentFnHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,QAKO,kBALP;AAMA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;;EAEA,MAAMa,sBAAsB,GAAG,MAAM;IACnCD,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD,CAHqB,CAMrB;;;EACA,MAAME,MAAM,GAAGP,SAAS,EAAxB;EACA,MAAMQ,OAAO,GAAGV,UAAU,EAA1B;EACA,MAAMW,KAAK,GAAGR,aAAa,EAA3B;EACA,MAAMS,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAM;IAAEY,SAAF;IAAaC,KAAb;IAAoBC,SAAS,EAAEC;EAA/B,IAA+CjB,OAAO,EAA5D,CAXqB,CAYrB;;EACA,MAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,KAAD,CAAlD;;EACA,MAAMwB,iBAAiB,GAAIC,WAAD,IAAiB;IACzC,MAAMC,aAAa,GAAIC,IAAD,IAAU;MAC9BJ,gBAAgB,CAAC,IAAD,CAAhB;IACD,CAFD;;IAGAF,WAAW,CACT;MACEO,GAAG,EAAE,sEADP;MAEEC,MAAM,EAAE,MAFV;MAGEC,IAAI,EAAE;QAAEC,KAAK,EAAEjB,MAAM,CAACkB,OAAhB;QAAyBC,IAAI,EAAER;MAA/B;IAHR,CADS,EAMTC,aANS,CAAX,CAJyC,CAYzC;EACD,CAbD;;EAcAQ,OAAO,CAACC,GAAR,CAAYnB,KAAZ;EACAjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,SAAD,IAAc,CAACC,KAAf,IAAwBG,aAA5B,EAA2C;MACzCP,OAAO,CAACqB,OAAR,CAAiB,eAAcpB,KAAK,CAACF,MAAN,CAAakB,OAAQ,EAApD;IACD;EACF,CAJQ,EAIN,CAACb,KAAD,EAAQD,SAAR,EAAmBI,aAAnB,EAAkCP,OAAlC,EAA2CC,KAAK,CAACF,MAAN,CAAakB,OAAxD,CAJM,CAAT,CA7BqB,CAmCrB;EACA;;EACA,MAAM;IAAEd,SAAS,EAAEmB,MAAb;IAAqBlB,KAAK,EAAEmB,GAA5B;IAAiClB,SAAS,EAAEmB;EAA5C,IAA4DnC,OAAO,EAAzE;EACA,MAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAM2B,aAAa,GAAIC,IAAD,IAAU;MAC9B,MAAMe,WAAW,GAAG,EAApB;MACAC,MAAM,CAACC,OAAP,CAAejB,IAAf,EAAqBkB,GAArB,CAAyB,QAAkB;QAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;QACzC,OAAOL,WAAW,CAACM,IAAZ,CAAiB;UACtBC,EAAE,EAAEH,GADkB;UAEtBb,IAAI,EAAEc,KAAK,CAACd,IAFU;UAGtBF,KAAK,EAAEgB,KAAK,CAAChB;QAHS,CAAjB,CAAP;MAKD,CAND;MAOAU,cAAc,CAACC,WAAD,CAAd;IACD,CAVD;;IAWAH,WAAW,CACT;MACEX,GAAG,EAAE;IADP,CADS,EAITF,aAJS,CAAX;EAMD,CAlBQ,EAkBN,CAACa,WAAD,CAlBM,CAAT;EAoBA,IAAIW,QAAJ;;EACA,IAAIb,MAAJ,EAAY;IACVa,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QADF,EACqB,GADrB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAI,CAACb,MAAD,IAAW,CAACC,GAAZ,IAAmBE,WAAW,CAACW,MAAZ,GAAqB,CAA5C,EAA+C;IAC7CD,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEV;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EACD,IAAI,CAACH,MAAD,IAAW,CAACC,GAAZ,IAAmBE,WAAW,CAACW,MAAZ,KAAuB,CAA9C,EAAiD;IAC/CD,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD,CAxEoB,CAyErB;;;EACA,oBACE;IAAS,SAAS,EAAEjD,OAAO,CAACiD,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACvC,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEE,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGF,eAAe,iBACd,QAAC,cAAD;MACE,SAAS,EAAEO,SADb;MAEE,YAAY,EAAEM,iBAFhB;MAGE,KAAK,EAAEL,KAHT,CAIE;;IAJF;MAAA;MAAA;MAAA;IAAA,QARJ,EAeG+B,QAfH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA7FD;;GAAMxC,Q;UAOWH,S,EACCF,U,EACFG,a,EACGF,W,EACoCF,O,EA0BaA,O;;;KArC9DM,Q;AA+FN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}