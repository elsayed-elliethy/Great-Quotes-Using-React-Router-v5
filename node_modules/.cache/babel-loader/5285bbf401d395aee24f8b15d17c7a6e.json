{"ast":null,"code":"var _jsxFileName = \"D:\\\\React2\\\\React Router\\\\Practice\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Route, useParams, Link, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch(); //////////\n\n  const {\n    isLoading,\n    error,\n    requestFn: getQuotes\n  } = useHttp();\n  const [allQuots, setAllQuots] = useState([]);\n  useEffect(() => {\n    const transformData = data => {\n      const loadedArray = [];\n      Object.entries(data).map(_ref => {\n        let [key, value] = _ref;\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          author: value.author\n        });\n      });\n      setAllQuots(loadedArray);\n    };\n\n    getQuotes({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\"\n    }, transformData);\n  }, [getQuotes]); /////////\n  // const quote = allQuots.find((quote) => quote.id === params.quoteId);\n\n  const [quote] = allQuots.filter(quote => quote.id === params.quoteId); // console.log(quote.id);\n\n  console.log(quote.author);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  } // if (!error && !isLoading && quote.text.trim() === \"\") {\n  //   return <p>No Quote Found</p>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [quote && /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"cG7afAJMqTdTdXyosAJi7ifbf5o=\", false, function () {\n  return [useParams, useHistory, useLocation, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"names":["useEffect","useState","Route","useParams","Link","useHistory","useLocation","useRouteMatch","Comments","HighlightedQuote","NoQuotesFound","useHttp","LoadingSpinner","QuoteDetails","params","history","location","match","isLoading","error","requestFn","getQuotes","allQuots","setAllQuots","transformData","data","loadedArray","Object","entries","map","key","value","push","id","text","author","url","quote","filter","quoteId","console","log","path"],"sources":["D:/React2/React Router/Practice/src/pages/QuoteDetails.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  useParams,\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  //////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  /////////\r\n  // const quote = allQuots.find((quote) => quote.id === params.quoteId);\r\n  const [quote] = allQuots.filter((quote) => quote.id === params.quoteId);\r\n  // console.log(quote.id);\r\n  console.log(quote.author);\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  // if (!error && !isLoading && quote.text.trim() === \"\") {\r\n  //   return <p>No Quote Found</p>;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {quote && <HighlightedQuote text={quote.text} author={quote.author} />}\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* {location.pathname === `/all-quotes/${params.quoteId}` && (\r\n        <div className=\"centered\">\r\n          <Link\r\n            className=\"btn--flat\"\r\n            to={`/all-quotes/${params.quoteId}/comments`}\r\n          >\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      )} */}\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}