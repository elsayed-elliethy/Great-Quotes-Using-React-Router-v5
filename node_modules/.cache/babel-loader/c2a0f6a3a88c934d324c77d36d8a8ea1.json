{"ast":null,"code":"var _jsxFileName = \"D:\\\\React2\\\\React Router\\\\Practice\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch(); // console.log(history);\n  // console.log(location);\n  // console.log(match, \"ggg\");\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAsc = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortHandler = () => {\n    history.push({\n      pathname: match.url,\n      search: `?sort=${isSortAsc ? \"desc\" : \"asc\"}`\n    }); // history.push(`${match.url}?sort=${isSortAsc ? \"desc\" : \"asc\"}`);\n\n    sortQuotes(props.quotes, isSortAsc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortHandler,\n        children: [\"Sort \", isSortAsc ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"lnX36E63fQVKeWsbRx0lhzwlToo=\", false, function () {\n  return [useHistory, useLocation, useRouteMatch];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","useRouteMatch","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","match","queryParams","URLSearchParams","search","isSortAsc","get","changeSortHandler","push","pathname","url","sorting","list","map","quote","author","text"],"sources":["D:/React2/React Router/Practice/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  // console.log(history);\n  // console.log(location);\n  // console.log(match, \"ggg\");\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAsc = queryParams.get(\"sort\") === \"asc\";\n  const changeSortHandler = () => {\n    history.push({\n      pathname: match.url,\n      search: `?sort=${isSortAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${match.url}?sort=${isSortAsc ? \"desc\" : \"asc\"}`);\n    sortQuotes(props.quotes, isSortAsc);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,kBAAvD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGd,UAAU,EAA1B;EACA,MAAMe,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,KAAK,GAAGd,aAAa,EAA3B,CAH2B,CAI3B;EACA;EACA;;EAEA,MAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAApB;EACA,MAAMC,SAAS,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAA9C;;EACA,MAAMC,iBAAiB,GAAG,MAAM;IAC9BR,OAAO,CAACS,IAAR,CAAa;MACXC,QAAQ,EAAER,KAAK,CAACS,GADL;MAEXN,MAAM,EAAG,SAAQC,SAAS,GAAG,MAAH,GAAY,KAAM;IAFjC,CAAb,EAD8B,CAK9B;;IACAf,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAec,SAAf,CAAV;EACD,CAPD;;EASA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEhB,OAAO,CAACsB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEJ,iBAAjB;QAAA,oBACQF,SAAS,GAAG,YAAH,GAAkB,WADnC;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEhB,OAAO,CAACuB,IAAvB;MAAA,UACGd,KAAK,CAACP,MAAN,CAAasB,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAAClB,EAFZ;QAGE,MAAM,EAAEkB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAAClB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAtCD;;GAAMC,S;UACYZ,U,EACCC,W,EACHC,a;;;KAHVU,S;AAwCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}