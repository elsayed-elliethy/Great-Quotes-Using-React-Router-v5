{"ast":null,"code":"import _slicedToArray from\"D:/React2/React Router/Practice v5/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Fragment,useRef,useState}from\"react\";import Card from\"../ui/Card\";import LoadingSpinner from\"../ui/LoadingSpinner\";import classes from\"./QuoteForm.module.css\";import{Prompt}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEntered=_useState2[0],setIsEntered=_useState2[1];var authorInputRef=useRef();var textInputRef=useRef();function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var formFocusHandler=function formFocusHandler(){setIsEntered(true);};var finichEnteredHandler=function finichEnteredHandler(){setIsEntered(false);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:isEntered,message:function message(location){return\"Are You Sure\";}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:formFocusHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:finichEnteredHandler,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"names":["Fragment","useRef","useState","Card","LoadingSpinner","classes","Prompt","QuoteForm","props","isEntered","setIsEntered","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusHandler","finichEnteredHandler","location","form","isLoading","loading","control","actions"],"sources":["D:/React2/React Router/Practice v5/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { Fragment, useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  };\n  const finichEnteredHandler = () => {\n    setIsEntered(false);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) => {\n          return \"Are You Sure\";\n        }}\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finichEnteredHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"wHAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,MAAOC,KAAP,KAAiB,YAAjB,CACA,MAAOC,eAAP,KAA2B,sBAA3B,CACA,MAAOC,QAAP,KAAoB,wBAApB,CACA,OAASC,MAAT,KAAuB,kBAAvB,C,wFACA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CAC3B,cAAkCN,QAAQ,CAAC,KAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,GAAMC,eAAc,CAAGV,MAAM,EAA7B,CACA,GAAMW,aAAY,CAAGX,MAAM,EAA3B,CAEA,QAASY,kBAAT,CAA2BC,KAA3B,CAAkC,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,cAAa,CAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C,CACA,GAAMC,YAAW,CAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CAAEC,MAAM,CAAEL,aAAV,CAAyBM,IAAI,CAAEH,WAA/B,CAAjB,EACD,CAED,GAAMI,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC7Bb,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,CAGA,GAAMc,qBAAoB,CAAG,QAAvBA,qBAAuB,EAAM,CACjCd,YAAY,CAAC,KAAD,CAAZ,CACD,CAFD,CAGA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EACE,IAAI,CAAED,SADR,CAEE,OAAO,CAAE,iBAACgB,QAAD,CAAc,CACrB,MAAO,cAAP,CACD,CAJH,EADF,cAOE,KAAC,IAAD,wBACE,cACE,OAAO,CAAEF,gBADX,CAEE,SAAS,CAAElB,OAAO,CAACqB,IAFrB,CAGE,QAAQ,CAAEb,iBAHZ,WAKGL,KAAK,CAACmB,SAAN,eACC,YAAK,SAAS,CAAEtB,OAAO,CAACuB,OAAxB,uBACE,KAAC,cAAD,IADF,EANJ,cAWE,aAAK,SAAS,CAAEvB,OAAO,CAACwB,OAAxB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAElB,cAApC,EAFF,GAXF,cAeE,aAAK,SAAS,CAAEN,OAAO,CAACwB,OAAxB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAEjB,YAAlC,EAFF,GAfF,cAmBE,YAAK,SAAS,CAAEP,OAAO,CAACyB,OAAxB,uBACE,eAAQ,OAAO,CAAEN,oBAAjB,CAAuC,SAAS,CAAC,KAAjD,uBADF,EAnBF,GADF,EAPF,GADF,CAqCD,CA3DD,CA6DA,cAAejB,UAAf"},"metadata":{},"sourceType":"module"}