{"ast":null,"code":"var _jsxFileName = \"D:\\\\React2\\\\React Router\\\\Practice\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  }; //////////\n\n\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const {\n    isLoading,\n    error,\n    requestFn: sendComment\n  } = useHttp();\n\n  const addCommentHandler = commentText => {\n    sendComment({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      method: \"POST\",\n      body: {\n        id: params.quoteId,\n        text: commentText\n      }\n    });\n    history.push(`${match.path}/comments`);\n  }; ///////////////\n  /////////\n\n\n  const {\n    isLoading: isload,\n    error: err,\n    requestFn: getComments\n  } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = data => {\n      const loadedArray = [];\n      Object.entries(data).map(_ref => {\n        let [key, value] = _ref;\n        return loadedArray.push({\n          id: value.id,\n          text: value.text\n        });\n      });\n      setAllComments(loadedArray);\n    };\n\n    getComments({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\"\n    }, transformData);\n  }, [getComments]);\n  let comments;\n\n  if (isload) {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isload && !err && allComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: allComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isload && !err && allComments.length === 0) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"no comments were added yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  } //////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      isLoading: isLoading,\n      onAddComment: addCommentHandler,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"FeR5Sk7c/nFngxu9ZwRrVWQdCqI=\", false, function () {\n  return [useParams, useHistory, useRouteMatch, useHttp, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","CommentsList","useHttp","useHistory","useParams","useRouteMatch","LoadingSpinner","Comments","isAddingComment","setIsAddingComment","startAddCommentHandler","params","history","match","isLoading","error","requestFn","sendComment","addCommentHandler","commentText","url","method","body","id","quoteId","text","push","path","isload","err","getComments","allComments","setAllComments","transformData","data","loadedArray","Object","entries","map","key","value","comments","length"],"sources":["D:/React2/React Router/Practice/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { isLoading, error, requestFn: sendComment } = useHttp();\n  const addCommentHandler = (commentText) => {\n    sendComment({\n      url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      method: \"POST\",\n      body: { id: params.quoteId, text: commentText },\n    });\n    history.push(`${match.path}/comments`);\n  };\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: value.id,\n          text: value.text,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n\n  let comments;\n  if (isload) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (!isload && !err && allComments.length > 0) {\n    comments = <CommentsList comments={allComments} />;\n  }\n  if (!isload && !err && allComments.length === 0) {\n    comments = <p className=\"centered\">no comments were added yet</p>;\n  }\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          isLoading={isLoading}\n          onAddComment={addCommentHandler}\n          error={error}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}