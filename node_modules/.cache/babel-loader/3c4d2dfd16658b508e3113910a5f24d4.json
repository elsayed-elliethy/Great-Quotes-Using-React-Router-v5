{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Component, useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const requestFn = useCallback(async (configReq, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(configReq.url, {\n        method: configReq.method ? configReq.method : \"GET\",\n        headers: configReq.headers ? configReq.headers : {},\n        body: configReq.body ? JSON.stringify(configReq.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request Field\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      // setError(err.message || \"Something Went Wrong\");\n      setError(\"Something Went Wrong\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    requestFn: requestFn\n  };\n};\n\n_s(useHttp, \"MqxnvB+gJbAy1IzGDh1+sC+jsc0=\");\n\nexport default useHttp;\n/*\n\nimport { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n*/","map":{"version":3,"names":["React","Component","useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","requestFn","configReq","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err"],"sources":["D:/React2/React Router/Practice/src/hooks/use-http.js"],"sourcesContent":["import React, { Component, useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const requestFn = useCallback(async (configReq, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(configReq.url, {\n        method: configReq.method ? configReq.method : \"GET\",\n        headers: configReq.headers ? configReq.headers : {},\n        body: configReq.body ? JSON.stringify(configReq.body) : null,\n      });\n      if (!response.ok) {\n        throw new Error(\"Request Field\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      // setError(err.message || \"Something Went Wrong\");\n      setError(\"Something Went Wrong\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    requestFn: requestFn,\n  };\n};\n\nexport default useHttp;\n\n/*\n\nimport { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n*/\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMM,SAAS,GAAGP,WAAW,CAAC,OAAOQ,SAAP,EAAkBC,SAAlB,KAAgC;IAC5DL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAS,CAACI,GAAX,EAAgB;QAC1CC,MAAM,EAAEL,SAAS,CAACK,MAAV,GAAmBL,SAAS,CAACK,MAA7B,GAAsC,KADJ;QAE1CC,OAAO,EAAEN,SAAS,CAACM,OAAV,GAAoBN,SAAS,CAACM,OAA9B,GAAwC,EAFP;QAG1CC,IAAI,EAAEP,SAAS,CAACO,IAAV,GAAiBC,IAAI,CAACC,SAAL,CAAeT,SAAS,CAACO,IAAzB,CAAjB,GAAkD;MAHd,CAAhB,CAA5B;;MAKA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAZ,SAAS,CAACW,IAAD,CAAT;IACD,CAXD,CAWE,OAAOE,GAAP,EAAY;MACZ;MACAhB,QAAQ,CAAC,sBAAD,CAAR;IACD;;IAEDF,YAAY,CAAC,KAAD,CAAZ;EACD,CApB4B,EAoB1B,EApB0B,CAA7B;EAqBA,OAAO;IACLD,SAAS,EAAEA,SADN;IAELE,KAAK,EAAEA,KAFF;IAGLE,SAAS,EAAEA;EAHN,CAAP;AAKD,CA9BD;;GAAML,O;;AAgCN,eAAeA,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}